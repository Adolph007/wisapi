/*global module,exports,require,console*/"use strict";var winston = require("winston");module.exports = function (env, logConfig) {    var logger = new (winston.Logger)({}), errorLogger = new (winston.Logger)({        transports: [            new (winston.transports.File)({ filename: logConfig.dirname + '/lc-error.log', level: "warn" })        ]    });    if (env === "production") {        logger.handleExceptions(new winston.transports.File({ filename: logConfig.dirname + '/exceptions-error.log' }));        errorLogger.handleExceptions(new winston.transports.File({ filename: logConfig.dirname + '/exceptions-error.log' }));        logger.add(winston.transports.File, {            level   : logConfig.level,            filename: "lc-info-log.log",            dirname : logConfig.dirname,            maxsize : logConfig.maxsize        });    } else if (env === "test") {        logger.add(winston.transports.Console, {level: 'debug'});        errorLogger.add(winston.transports.Console, {level: "warn"});        errorLogger.remove(winston.transports.File);    }    else {        logger.add(winston.transports.Console, {level: 'debug'});        errorLogger.add(winston.transports.Console, {level: "warn"});    }    return {        log  : function () {            logger.log.apply(logger, arguments);        },        info : function () {            logger.info.apply(logger, arguments);        },        debug: function () {            logger.debug.apply(logger, arguments);        },        warn : function () {            errorLogger.warn.apply(logger, arguments);        },        error: function () {            errorLogger.error.apply(logger, arguments);        }    };};